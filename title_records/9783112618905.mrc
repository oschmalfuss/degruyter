05581nam a22005775i 45000010014000000030009000140050017000230060019000400070015000590080041000740200018001150240031001330350021001640400033001850410008002180440011002260720023002371000082002602450141003422500017004832640046005002640011005463000069005573360026006263370026006523380036006783470024007144900047007385053386007855060104041715300026042755380049043015460015043505880112043656500031044777000080045087000080045887760025046688560042046938560049047358560080047849120016048649120014048809120015048949120015049099120015049249120024049399120014049639120014049779120012049919783112618905DE-B159720220729113935.0m|||||o||d||||||||cr || ||||||||220729t20221983gw     fo  d z      ger d  a97831126189057 a10.1515/97831126189052doi  a(DE-B1597)631955  aDE-B1597bengcDE-B1597erda0 ager  agwcDE 7aNON0000002bisacsh1 aRiedewald, Günter, eauthor.4aut4http://id.loc.gov/vocabulary/relators/aut10aFormale Beschreibung von Programmiersprachen :bEine Einführung in die Semantik /cGünter Riedewald, Piotr Dembinski, Jan Maluszynski.  aReprint 2022 1aBerlin ;aBoston : bDe Gruyter, c[2022] 4c©1983  a1 online resource (216 p.) :bMit 37 Abbildungen und 16 Tabellen  atextbtxt2rdacontent  acomputerbc2rdamedia  aonline resourcebcr2rdacarrier  atext filebPDF2rda0 aInformatik, Kybernetik, Rechentechnik ;v600tFrontmatter -- tVorwort -- tInhalt -- t1. Einleitung -- t1.1. Algorithmen und Programme -- t1.2. Notwendigkeit der Formalisierung der Beschreibung von Programmiersprachen -- t1.3. Verschiedene Vorgehensweisen der Semantikdefinition. Ein Beispiel -- t2. Methoden der Syntaxdefinition -- t2.1. Sprachen und generative Grammatiken -- t2.2. Kontextfreie Grammatiken -- t2.3. Anwendung kontextfreier Grammatiken zur Definition von Programmiersprachen -- t2.3.1. Backus-Naur-Form (BNF) -- t2.3.2. Die Beispielprogrammiersprache BPS -- t2.3.3. Vorteile und Grenzen kontextfreier Grammatiken als Mittel zur Definition von Programmiersprachen -- t2.4. Zweistufengrammatiken -- t2.4.1. Der Begriff der Zweistufengrammatik -- t2.4.2. Beschreibung der Untermenge U der Sprache BPS durch eine Zweistufengrammatik -- t2.4.3. Vor- und Nachteile von Zweistufengrammatiken als Mittel zur Definition von Programmiersprachen -- t2.5. Die abstrakte Syntax von Programmiersprachen -- t2.5.1. Konkrete und abstrakte Syntax -- t2.5.2. Die Wiener Methode der Definition der abstrakten Syntax -- t2.6. Bibliographie -- t3. Methoden der Semantikdefinition -- t3.1. Maschine, Sprache und Implementation -- t3.1.1. Der Begriff der Maschine -- t3.1.2. Direkte Implementation einer Programmiersprache: Interpretation und Kompilation -- t3.1.3. Die Computerumgebung: Variablen, Werte und Zustände -- t3.2. Die operationale Methode der Semantikdefinition -- t3.2.2. Die Wiener Methode der Semantikdefinition als Beispiel der operationalen Methode -- t3.2.3. Systeme semantischer Regeln -- t3.2.4. Verallgemeinerte Systeme semantischer Regeln -- t3.3. Semantikdefinition durch Fixpunkte von Gleichungssystemen -- t3.3.1. Gleichungssysteme und ihre Lösung -- t3.3.2. Fixpunktmethode und operationale Methode -- t3.4. Die denotionale Methode der Semantikdefinition und Übereinstimmung verschiedenartig definierter Semantiken -- t3.4.1. Die denotationale Methode -- tKorrektheit und Äquivalenz semantischer Definitionen -- t3.5. Erweiterung: Semantik ausgewählter Programmkonstruktionen -- t3.5.1. Sprünge und Fortsetzung -- t3.5.2. Programme mit Blockstruktur -- t3.5.3. Prozeduren (Funktionen) -- t3.5.4. Bekursive Prozeduren -- t3.5.5. Prozeduren und Fortsetzungen -- t3.5.6. Ein- und Ausgabeanweisungen -- t3.5.7. Datentypen -- t3.6. Die axiomatische Methode der Semantikdefinition -- t3.6.1. Formalisierte Theorien und formalisierte Theorien erster Stufe für Programmiersprachen -- t3.6.2. Das Hoaresche System von Schlußregeln für iterative Programme -- t3.6.3. Ein System von Schlußregeln für Programme mit Blockstruktur und nichtrekursiyen Prozeduren -- t3.6.4. Ein System von Schlußregeln für rekursive Prozeduren -- t3.7. Bibliographie -- t4. Attributierte Grammaliken -- t4.1. Arten attributierter Grammatiken -- t4.1.1. Knuthsche attributierte Grammatiken -- t4.1.2. Grammatiken syntaktischer Funktionen -- t4.2. Anwendung attributierter Grammatiken zur Semantikdefinition -- t4.3. Bibliographie -- t5. Algebraische Modelle von Programmiersprachen -- t5.1. Algebraisches Modell für kontextfreie Programmiersprachen -- t5.1.1. Repräsentationsalgebra -- t5.1.2. Abstrakte Syntax -- t5.1.3. Semantische Algebren -- t5.2. Darstellung von Kontextbedingungen -- t5.3. Bibliographie -- tAnhang -- tLiteratur -- tSachwortverzeichnis0 arestricted accessuhttp://purl.org/coar/access_right/c_16ecfonline access with authorization2star  aIssued also in print.  aMode of access: Internet via World Wide Web.  aIn German.0 aDescription based on online resource; title from PDF title page (publisher's Web site, viewed 29. Jul 2022) 7aNON-CLASSIFIABLE.2bisacsh1 aDembinski, Piotr, eauthor.4aut4http://id.loc.gov/vocabulary/relators/aut1 aMaluszynski, Jan, eauthor.4aut4http://id.loc.gov/vocabulary/relators/aut0 cprintz978311261889940uhttps://doi.org/10.1515/978311261890540uhttps://www.degruyter.com/isbn/9783112618905423Coveruhttps://www.degruyter.com/document/cover/isbn/9783112618905/original  aEBA_BACKALL  aEBA_DGALL  aEBA_EBKALL  aEBA_SSHALL  aEBA_STMALL  aGBV-deGruyter-alles  aPDA11SSHE  aPDA12STME  aPDA5EBK