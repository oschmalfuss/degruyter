07118nam a22012855i9780691227658DE-B159720240306124542.0m|||||o||d||||||||cr || ||||||||240306t20212005nju    fo  d z      eng d  a2021694910  a97806912276587 a10.1515/97806912276582doi  a(DE-B1597)576675  a(OCoLC)1414457220  aDE-B1597bengcDE-B1597erda0 aeng  anjucUS-NJ00aQA76.58 4aQA76.58 7aCOM0480002bisacsh04a004/.352221 aScott, Larkin Ridgway, eauthor.4aut4http://id.loc.gov/vocabulary/relators/aut10aScientific Parallel Computing /cBabak Bagheri, Terry Clark, Larkin Ridgway Scott. 1aPrinceton, NJ : bPrinceton University Press, c[2021] 4c©2005  a1 online resource (392 p.) :b75 line illus.  atextbtxt2rdacontent  acomputerbc2rdamedia  aonline resourcebcr2rdacarrier  atext filebPDF2rda00tFrontmatter -- tContents -- tPreface -- tNotation -- tChapter 1. Introduction -- tChapter 2. Parallel Performance -- tChapter 3. Computer Architecture -- tChapter 4. Dependences -- tChapter 5. Parallel Languages -- tChapter 6. Collective Operation -- tChapter 7. Current Programming Standards -- tChapter 8. The IPlanguage Model -- tChapter 9. High Performance Fortran -- tChapter 10. Loop Tiling -- tChapter 11. Matrix Eigen Analysis -- tChapter 12. Linear Systems -- tChapter 13. Particle Dynamics -- tChapter 14. Mesh Methods -- tChapter 15. Sorting -- tBibliography -- tIndex0 arestricted accessuhttp://purl.org/coar/access_right/c_16ecfonline access with authorization2star  aWhat does Google's management of billions of Web pages have in common with analysis of a genome with billions of nucleotides? Both apply methods that coordinate many processors to accomplish a single task. From mining genomes to the World Wide Web, from modeling financial markets to global weather patterns, parallel computing enables computations that would otherwise be impractical if not impossible with sequential approaches alone. Its fundamental role as an enabler of simulations and data analysis continues an advance in a wide range of application areas. Scientific Parallel Computing is the first textbook to integrate all the fundamentals of parallel computing in a single volume while also providing a basis for a deeper understanding of the subject. Designed for graduate and advanced undergraduate courses in the sciences and in engineering, computer science, and mathematics, it focuses on the three key areas of algorithms, architecture, languages, and their crucial synthesis in performance. The book's computational examples, whose math prerequisites are not beyond the level of advanced calculus, derive from a breadth of topics in scientific and engineering simulation and data analysis. The programming exercises presented early in the book are designed to bring students up to speed quickly, while the book later develops projects challenging enough to guide students toward research questions in the field. The new paradigm of cluster computing is fully addressed. A supporting web site provides access to all the codes and software mentioned in the book, and offers topical information on popular parallel computing systems. Integrates all the fundamentals of parallel computing essential for today's high-performance requirements Ideal for graduate and advanced undergraduate students in the sciences and in engineering, computer science, and mathematics Extensive programming and theoretical exercises enable students to write parallel codes quickly More challenging projects later in the book introduce research questions New paradigm of cluster computing fully addressed Supporting web site provides access to all the codes and software mentioned in the book  aMode of access: Internet via World Wide Web.  aIn English.0 aDescription based on online resource; title from PDF title page (publisher's Web site, viewed 06. Mrz 2024) 0aParallel processing (Electronic computers) 0aParallel processing (Electronic computers). 7aCOMPUTERS / Systems Architecture / Distributed Systems & Computing.2bisacsh  aAllcache.  aAmdahl, Gene.  aAmdahl’s Law.  aBanerjee’s inequality.  aBrinch Hansen.  aCinderella.  aCo-array Fortran.  aConcurrent Pascal.  aGaussian elimination.  aJacobi iteration.  aaccess set.  aassociative memory.  aasymptotic upper bound.  abit operations.  abottleneck.  aboundary value problem.  abus.  acache.  acarrier index.  acommunication.  acompact factorization.  acontrol structure.  adance hall architecture.  adata movement.  adata parallelism.  adependence graph.  adeterministic.  adimensional exchange.  adiscretization scheme.  adistributed memory.  adivide-and-conquer.  aeigenpair.  aeigenvalue.  aeigenvector.  aembarrassingly parallel.  afull multigrid.  afunctional units.  aglobal array toolkit.  aguarded memory.  ahypercube.  aimmersion.  aimplicit process group.  ainitial value problem.  aiteration distribution.  aiteration space.  aiterative solvers.  alegacy applications.  alink popularity.  amassive parallelism.  amatrix product.  amessage passing.  anetwork of workstations.1 aBagheri, Babak, eauthor.4aut4http://id.loc.gov/vocabulary/relators/aut1 aClark, Terry, eauthor.4aut4http://id.loc.gov/vocabulary/relators/aut08iTitle is part of eBook package:dDe GruytertPrinceton University Press eBook-Package Gap Yearsz978311078423740uhttps://doi.org/10.1515/9780691227658?locatt=mode:legacy40uhttps://www.degruyter.com/isbn/9780691227658423Coveruhttps://www.degruyter.com/document/cover/isbn/9780691227658/original  a978-3-11-078423-7  Princeton University Press eBook-Package Gap Years  aEBA_BACKALL  aEBA_CL_CHCOMSGSEN  aEBA_EBACKALL  aEBA_EBKALL  aEBA_ECL_CHCOMSGSEN  aEBA_EEBKALL  aEBA_ESTMALL  aEBA_PPALL  aEBA_STMALL  aGBV-deGruyter-alles